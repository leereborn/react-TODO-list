{"version":3,"sources":["Navbar.js","TableArea.js","Form.js","Home.js","About.js","EntryDetails.js","App.js","index.js"],"names":["Navbar","className","to","TableArea","entries","handleDelete","selected","onClick","type","disabled","map","item","e","id","target","checked","push","filter","handleCheckboxChange","task","category","value","MyForm","handleAdd","input1","idAttr","typeAttr","labelText","input2","options","text","input3","useState","input1Value","setInput1Value","input2Value","setInput2Value","input3Value","setInput3Value","onSubmit","preventDefault","notes","htmlFor","required","onChange","event","cols","rows","Home","About","EntryDetails","useParams","history","useHistory","toString","goBack","App","setEntry","path","entry","length","arr","newEntries","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2808628d.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <Link className=\"link\" to=\"/react-TODO-list/\">\n        Home\n      </Link>\n      <Link className=\"link\" to=\"/react-TODO-list/about\">\n        About\n      </Link>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import { Link } from \"react-router-dom\";\n\nconst TableArea = ({ entries, handleDelete }) => {\n  const heads = [\"Task\", \"Category\", \"Operate\"];\n  let selected = [];\n\n  const handleCheckboxChange = (e, id) => {\n    if (e.target.checked) {\n      selected.push(id);\n    } else {\n      selected.filter((item) => item !== id);\n    }\n  };\n\n  return (\n    <div className=\"my-table\">\n      <button onClick={() => handleDelete(selected)}>Delete selected</button>\n      <table>\n        <thead>\n          <tr>\n            <th>\n              <input type=\"checkbox\" disabled />\n            </th>\n            {heads.map((item) => (\n              <th key={item}>{item}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {entries.map((item) => (\n            <tr key={item.id}>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  onClick={(e) => handleCheckboxChange(e, item.id)}\n                />\n              </td>\n              <td>\n                <Link to={`/react-TODO-list/${item.id}`}>{item.task}</Link>\n              </td>\n              <td>{item.category}</td>\n              <td>\n                <input\n                  type=\"button\"\n                  value=\"Delete\"\n                  onClick={() => {\n                    handleDelete([item.id]);\n                  }}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default TableArea;\n","import { useState } from \"react\";\n\nconst MyForm = ({ handleAdd }) => {\n  const input1 = {\n    idAttr: \"input1\",\n    typeAttr: \"text\",\n    labelText: \"Task: \",\n  };\n\n  const input2 = {\n    idAttr: \"input2\",\n    labelText: \"Category: \",\n    options: [\n      { value: \"Work\", text: \"Work\" },\n      { value: \"Grocery\", text: \"Grocery\" },\n      { value: \"Workout\", text: \"Workout\" },\n    ],\n  };\n\n  const input3 = {\n    idAttr: \"input3\",\n    labelText: \"Notes: \",\n  };\n\n  const [input1Value, setInput1Value] = useState(\"\");\n  const [input2Value, setInput2Value] = useState(input2.options[0].value);\n  const [input3Value, setInput3Value] = useState(\"\");\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault(); //prevent the page from refresh\n    handleAdd({\n      task: input1Value,\n      category: input2Value,\n      notes: input3Value,\n    });\n  };\n\n  return (\n    <div className=\"my-form\">\n      <form onSubmit={handleOnSubmit}>\n        <div>\n          <label htmlFor={input1.idAttr}>{input1.labelText}</label>\n          <input\n            type={input1.type}\n            id={input1.idAttr}\n            value={input1Value}\n            required\n            onChange={(event) => setInput1Value(event.target.value)}\n          />\n        </div>\n\n        <div>\n          <label htmlFor={input2.idAttr}>{input2.labelText}</label>\n          <select\n            id={input2.idAttr}\n            value={input2Value}\n            required\n            onChange={(event) => setInput2Value(event.target.value)}\n          >\n            {input2.options.map((item) => (\n              <option key={item.value} value={item.value}>\n                {item.text}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div>\n          <label htmlFor={input3.idAttr}>{input3.labelText}</label>\n          <br />\n          <textarea\n            id={input3.idAttr}\n            cols=\"30\"\n            rows=\"10\"\n            value={input3Value}\n            required\n            onChange={(event) => setInput3Value(event.target.value)}\n          ></textarea>\n        </div>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </div>\n  );\n};\n\nexport default MyForm;\n","import TableArea from \"./TableArea\";\nimport MyForm from \"./Form\";\n\nconst Home = ({ handleAdd, handleDelete, entries }) => {\n  return (\n    <div className=\"home\">\n      <MyForm handleAdd={handleAdd} />\n      <TableArea entries={entries} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default Home;\n","const About = () => {\n  return <div className=\"about\">A React TODO list app</div>;\n};\n\nexport default About;\n","import { useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\n\nconst EntryDetails = ({ entries }) => {\n  const { id } = useParams();\n  const history = useHistory();\n\n  return entries\n    .filter((item) => item.id.toString() === id)\n    .map((item) => (\n      <div className=\"detail\" key={id}>\n        <div>\n          <b>Task: </b>\n          {item.task}\n        </div>\n        <div>\n          <b>Category: </b>\n          {item.category}\n        </div>\n        <div>\n          <b>Notes: </b>\n          {item.notes}\n        </div>\n        <button onClick={history.goBack}>Back</button>\n      </div>\n    ));\n};\n\nexport default EntryDetails;\n","import Navbar from \"./Navbar\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport EntryDetails from \"./EntryDetails\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [entries, setEntry] = useState([\n    {\n      id: 0,\n      task: \"Milk\",\n      category: \"Grocery\",\n      notes: \"3 bags\",\n    },\n  ]);\n\n  const handleAdd = (entry) => {\n    if (entries.length === 0) {\n      entry.id = 0;\n    } else {\n      entry.id = entries[entries.length - 1].id + 1;\n    }\n    setEntry([...entries, entry]);\n  };\n\n  const handleDelete = (arr) => {\n    const newEntries = entries.filter((item) => !arr.includes(item.id));\n    setEntry(newEntries);\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/react-TODO-list/about\">\n            <About />\n          </Route>\n          <Route path=\"/react-TODO-list/:id\">\n            <EntryDetails entries={entries} />\n          </Route>\n          <Route path=\"/react-TODO-list/\">\n            <Home\n              handleAdd={handleAdd}\n              handleDelete={handleDelete}\n              entries={entries}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}